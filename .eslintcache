[{"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\index.js":"1","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\reportWebVitals.js":"2","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Stage.js":"3","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\ParticipantsList.js":"4","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Participant.js":"5","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\App.js":"6","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\dummyList.js":"7","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Chatlog.js":"8"},{"size":500,"mtime":1606849589610,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":410,"mtime":1606855001649,"results":"12","hashOfConfig":"10"},{"size":541,"mtime":1606857622654,"results":"13","hashOfConfig":"10"},{"size":480,"mtime":1606844850806,"results":"14","hashOfConfig":"10"},{"size":441,"mtime":1606858153965,"results":"15","hashOfConfig":"10"},{"size":2304,"mtime":1606855791865,"results":"16","hashOfConfig":"10"},{"size":1917,"mtime":1607386755722,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"y3buji",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\index.js",[],["40","41"],"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\reportWebVitals.js",[],"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Stage.js",[],"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\ParticipantsList.js",["42"],"import Participant from './Participant'\r\nimport './ParticipantList.css'\r\n\r\nexport default function ParticipantList(props){\r\n    let key = 0\r\n    let participantsHTML = props.participants.map(participant => {\r\n        key++\r\n        return <Participant name={participant.name} avatar={participant.avatar} id={participant.id} inSession={participant.inSession} onStage={participant.onStage} key={participant.id}/> \r\n    })\r\n\r\n    return(\r\n        <div className='participants-list'>\r\n            {participantsHTML}\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Participant.js",[],["43","44"],"C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\App.js",["45"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport ParticipantList from './ParticipantsList';\r\nimport dummyList from './dummyList'\r\nimport Stage from './Stage'\r\nimport Chatlog from './Chatlog'\r\n\r\n\r\nexport default function App(){\r\n      return (\r\n        <main>\r\n            <ParticipantList participants={dummyList.list}/>\r\n            <Stage />\r\n            <Chatlog />\r\n        </main>\r\n      )\r\n}\r\n","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\dummyList.js",["46"],"const list = [\r\n        {\r\n            id: 1,\r\n            name: 'Koren Templeton',\r\n            avatar:\r\n                'https://robohash.org/itaquevoluptatumrerum.jpg?size=200x200&set=set1',\r\n            inSession: true,\r\n            onStage: true\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Caty Flucker',\r\n            avatar:\r\n                'https://robohash.org/doloredolorescupiditate.jpg?size=200x200&set=set1',\r\n            inSession: true,\r\n            onStage: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Axe Kubicka',\r\n            avatar: 'https://robohash.org/utlaborumfugit.jpg?size=200x200&set=set1',\r\n            inSession: false,\r\n            onStage: false\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Frank Runciman',\r\n            avatar:\r\n                'https://robohash.org/etexercitationemassumenda.jpg?size=200x200&set=set1',\r\n            inSession: true,\r\n            onStage: false\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Ashla Attwool',\r\n            avatar:\r\n                'https://robohash.org/iustodoloremqueinventore.jpg?size=200x200&set=set1',\r\n            inSession: true,\r\n            onStage: true\r\n        }\r\n    ]\r\n\r\nconst chatEvents = [\r\n    {\r\n        participantId: 3,\r\n        type: 'message',\r\n        message: 'Hello world',\r\n        time: 1548852646559,\r\n        timestamp: 1548852484247\r\n    },\r\n    {\r\n        participantId: 2,\r\n        type: 'thumbs-up',\r\n        timestamp: 1548852484247\r\n    },\r\n    {\r\n        participantId: 4,\r\n        type: 'thumbs-down',\r\n        timestamp: 1548852484247\r\n    },\r\n    {\r\n        participantId: 1,\r\n        type: 'raise-hand',\r\n        timestamp: 1548852544247\r\n    },\r\n    {\r\n        participantId: 1,\r\n        type: 'clap',\r\n        timestamp: 1548852544247\r\n    },\r\n    {\r\n        participantId: 1,\r\n        type: 'join',\r\n        timestamp: 1548852544247\r\n    },\r\n    {\r\n        participantId: 5,\r\n        type: 'leave',\r\n        timestamp: 1548852604247\r\n    },\r\n    {\r\n        participantId: 3,\r\n        type: 'join-stage',\r\n        timestamp: 1548852664247\r\n    },\r\n    {\r\n        participantId: 3,\r\n        type: 'leave-stage',\r\n        timestamp: 1548852724247\r\n    }\r\n];\r\n\r\nexport default{\r\n    list,\r\n    chatEvents\r\n}","C:\\Users\\Tyler\\Documents\\GitHub\\owl-project\\src\\Chatlog.js",["47","48"],"import dummyList from './dummyList'\r\nimport Participant from './Participant'\r\n\r\nexport default function Chatlog(){\r\n    let log = [];\r\n    \r\n    dummyList.chatEvents.forEach(event => {\r\n        if(event.type === 'message'){\r\n            log.push(<SendMessage name={event.participantId} time={formatTime(event.timestamp)} message={event.message} />)\r\n        }\r\n        else{\r\n            log.push(<SendReact name={event.participantId} text='test' />)\r\n        }\r\n        // switch(event.type){\r\n        //     case 'message':\r\n        //         log.push(<SendMessage name={event.participantId} time={event.time} message={event.messsage} />)\r\n        //         break;\r\n        //     case 'thumbs-up':\r\n        //         log.push(<SendThumbsUp name={event.participantId} />)\r\n        //         break;\r\n        //     case 'thumbs-down':\r\n        //         log.push (<SendThumbsDown name={event.participantId} />)\r\n        //         break;\r\n        //     case 'clap':\r\n        //         log.push(<SendClap name={event.participantId} />)\r\n        //         break;\r\n        //     case 'raise-hand':\r\n        //         log.push(<SendRaisedHand name={event.participantId} />)\r\n        //         break;\r\n        //     default:\r\n        //         log.push(<p>Who Knows</p>)\r\n        // }\r\n    })\r\n    console.log(log);\r\n    return(\r\n        <div className='log'>\r\n            {log}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SendMessage(props){\r\n    return(\r\n        <div className='message'>\r\n            <p><b>{props.name}</b>{props.time}</p>\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SendReact(props){\r\n    return(\r\n        <div className='react'>\r\n            <p><b>{props.name}</b>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction formatTime(time){\r\n    let [hour, minute, second] = new Date(time).toLocaleTimeString(\"en-US\").split(/:| /)\r\n    return `${hour}:${minute}`;\r\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":9,"nodeType":"55","messageId":"56","endLine":7,"endColumn":12},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","severity":1,"message":"59","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":93,"column":1,"nodeType":"62","endLine":96,"endColumn":2},{"ruleId":"53","severity":1,"message":"63","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":19},{"ruleId":"53","severity":1,"message":"64","line":60,"column":24,"nodeType":"55","messageId":"56","endLine":60,"endColumn":30},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar",["65"],["66"],"'ReactDOM' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Participant' is defined but never used.","'second' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]